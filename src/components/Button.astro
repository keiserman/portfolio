---
const { text, variant } = Astro.props;
const isSecondary = variant === "secondary";
---

<button
  class={`md:p-4 p-3 rounded-lg flex items-center gap-2 font-mono text-sm uppercase leading-none tracking-wider shadow-sm transition ${
    isSecondary
      ? "bg-transparent text-neutral-600 dark:text-neutral-100 border border-neutral-300 dark:border-neutral-700 hover:bg-neutral-100 dark:hover:border-neutral-100 dark:hover:text-neutral-900 hover:shadow-md"
      : "bg-neutral-900 text-white hover:bg-neutral-800 dark:bg-white dark:text-neutral-900 border-none dark:hover:bg-neutral-200 hover:shadow-md"
  }`}
  data-value={text}
>
  {text}
  <slot />
</button>

<script>
  const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

  function scrambleText(button) {
    let iteration = 0;
    const originalText = button.dataset.value;
    let interval = setInterval(() => {
      button.textContent = originalText
        .split("")
        .map((letter, index) => {
          if (index < iteration) {
            return originalText[index];
          }
          return letters[Math.floor(Math.random() * 26)];
        })
        .join("");

      if (iteration >= originalText.length) {
        clearInterval(interval);
      }

      iteration += 1 / 3;
    }, 30);

    button._interval = interval;
  }

  function restoreText(button) {
    clearInterval(button._interval);
    button.textContent = button.dataset.value;
  }

  document.querySelectorAll("button[data-value]").forEach((button) => {
    button.addEventListener("mouseover", () => scrambleText(button));
    button.addEventListener("mouseleave", () => restoreText(button));
  });
</script>
