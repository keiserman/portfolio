---
const { text, variant, url, ...rest } = Astro.props;
const isSecondary = variant === "secondary";
---

<a
  href={url}
  class={`p-3 rounded-lg flex items-center gap-2 font-mono text-xs uppercase leading-none tracking-wider shadow-sm transition ${
    isSecondary
      ? "bg-transparent text-zinc-100 border border-zinc-700 hover:bg-zinc-800 hover:shadow-md"
      : "bg-primary text-zinc-900 border-none hover:shadow-md"
  }`}
  data-value={text}
  {...rest}
>
  {text}
  <slot />
</a>

<script>
  const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

  function scrambleText(button) {
    let iteration = 0;
    const originalText = button.dataset.value;
    let interval = setInterval(() => {
      button.textContent = originalText
        .split("")
        .map((letter, index) => {
          if (index < iteration) {
            return originalText[index];
          }
          return letters[Math.floor(Math.random() * 26)];
        })
        .join("");

      if (iteration >= originalText.length) {
        clearInterval(interval);
      }

      iteration += 1 / 3;
    }, 30);

    button._interval = interval;
  }

  function restoreText(button) {
    clearInterval(button._interval);
    button.textContent = button.dataset.value;
  }

  document.querySelectorAll("a[data-value]").forEach((button) => {
    button.addEventListener("mouseover", () => scrambleText(button));
    button.addEventListener("mouseleave", () => restoreText(button));
  });
</script>
